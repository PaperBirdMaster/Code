#include "Events.hpp"

namespace PaperBird
{
namespace Events
{
/*
template <typename EventType> Manager<EventType> *const NewEventManager()
{
	return new Manager<EventType>();
};

void SendEvent(const Event_Base &aEvent, const std::ostringstream &aData = std::ostringstream())
{
	pEventManager->SendEvent(aEvent, aData);
};

void AddListener(const Event_Base &aEvent, Listener::ListenerCallback &aListenerCallback)
{
	pEventManager->AddListener(aEvent, aListenerCallback);
};

void RemoveListener(const Listener &aListener)
{
	pEventManager->RemoveListener(aListener);
};

void RemoveListener(const Event_Base &aEvent, const Listener &aListener)
{
	pEventManager->RemoveListener(aEvent, aListener);
};

void Close()
{
	delete pEventManager;
};*/

}
}
